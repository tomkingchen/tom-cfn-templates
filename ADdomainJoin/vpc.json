{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CloudFormation template for domain join with CreationPolicy and DependsOn", 
    "Parameters": {
      "KeyName": {
        "MinLength" : 1,  
        "Type": "AWS::EC2::KeyPair::KeyName"
      },
      "BaseAmiId": {
        "Default": "ami-bd3ba0aa",
        "Type": "String"
      },
      "DomainAdminUser": {
        "Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
        "Type": "String",
        "Default": "StackAdmin"
      },
      "AdminPassword": {
          "NoEcho": "true",
          "Description" : "The Windows administrator account password",
          "Type": "String",
          "MinLength": "8",
          "MaxLength": "41"
      },
      "DomainDNSName": {
        "Description": "Fully qualified domain name (FQDN) of the forest root domain",
        "Type": "String",
        "Default": "mydomain.local"
      },
      "DomainNetBiosName": {
        "Description": "Netbios name for the domain",
        "Type": "String",
        "Default": "mydomain"
      }
    },
    "Resources": {
    
      "PrivateSecurityGroup": {
        "Properties": {
          "GroupDescription": "This is the security group for Active Directory",
          "SecurityGroupEgress": [
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "0",
              "IpProtocol": "tcp",
              "ToPort": "65535"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "0",
              "IpProtocol": "udp",
              "ToPort": "65535"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "-1",
              "IpProtocol": "icmp",
              "ToPort": "-1"
            },
            {
              "CidrIp": "0.0.0.0/0",
              "FromPort": "80",
              "IpProtocol": "tcp",
              "ToPort": "80"
            },
            {
              "CidrIp": "0.0.0.0/0",
              "FromPort": "443",
              "IpProtocol": "tcp",
              "ToPort": "443"
            }
          ],
          "SecurityGroupIngress": [
            {
              "FromPort": "3389",
              "IpProtocol": "tcp",
              "SourceSecurityGroupId": {
                "Ref": "BastionSecurityGroup"
              },
              "ToPort": "3389"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "0",
              "IpProtocol": "tcp",
              "ToPort": "65535"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "0",
              "IpProtocol": "udp",
              "ToPort": "65535"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "-1",
              "IpProtocol": "icmp",
              "ToPort": "-1"
            }
          ],
          "Tags": [
            {
              "Key": "Name",
              "Value": "PrivateSecurityGroup"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Type": "AWS::EC2::SecurityGroup"
      },
      "BastionSecurityGroup": {
        "Properties": {
          "GroupDescription": "This is the security group for the bastion host",
          "SecurityGroupEgress": [
            {
              "CidrIp": "0.0.0.0/0",
              "FromPort": "80",
              "IpProtocol": "tcp",
              "ToPort": "80"
            },
            {
              "CidrIp": "0.0.0.0/0",
              "FromPort": "443",
              "IpProtocol": "tcp",
              "ToPort": "443"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "3389",
              "IpProtocol": "tcp",
              "ToPort": "3389"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "0",
              "IpProtocol": "tcp",
              "ToPort": "65535"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "0",
              "IpProtocol": "udp",
              "ToPort": "65535"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "-1",
              "IpProtocol": "icmp",
              "ToPort": "-1"
            }
          ],
          "SecurityGroupIngress": [
            {
              "CidrIp": "0.0.0.0/0",
              "FromPort": "3389",
              "IpProtocol": "tcp",
              "ToPort": "3389"
            },
            {
              "CidrIp": "10.1.0.0/16",
              "FromPort": "-1",
              "IpProtocol": "icmp",
              "ToPort": "-1"
            }
          ],
          "Tags": [
            {
              "Key": "Name",
              "Value": "BastionSecurityGroup"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Type": "AWS::EC2::SecurityGroup"
      },
  
      "PublicSubnetAZ1": {
        "Properties": {
          "AvailabilityZone": {
            "Fn::Select": [
              0,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": "10.1.1.0/24",
          "Tags": [
            {
              "Key": "Name",
              "Value": "PublicSubnetAZ1"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "PublicSubnetAZ1SubnetAssociation": {
        "Properties": {
          "RouteTableId": {
            "Ref": "DMZRouteTable"
          },
          "SubnetId": {
            "Ref": "PublicSubnetAZ1"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
  
      "PrivateSubnetAZ1": {
        "Properties": {
          "AvailabilityZone": {
            "Fn::Select": [
              0,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": "10.1.3.0/24",
          "Tags": [
            {
              "Key": "Name",
              "Value": "PrivateSubnetAZ1"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "PrivateSubnetAZ1SubnetAssociation": {
        "Properties": {
          "RouteTableId": {
            "Ref": "InternalRouteTable"
          },
          "SubnetId": {
            "Ref": "PrivateSubnetAZ1"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
      
      "DMZRouteTable": {
        "Properties": {
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackName"
              }
            },
            {
              "Key": "Name",
              "Value": "DMZRouteTable"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "InternalRouteTable": {
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "InternalRouteTable"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "NATRoute": {
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "AWSNat"
          },
          "RouteTableId": {
            "Ref": "InternalRouteTable"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "PublicRoute": {
        "DependsOn" : "InternetGatewayAttachment",    
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "InternetGateway"
          },
          "RouteTableId": {
            "Ref": "DMZRouteTable"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "VPC": {
        "Properties": {
          "CidrBlock": "10.1.0.0/16",
          "EnableDnsHostnames": "true",
          "EnableDnsSupport": "true",
          "Tags": [
            {
              "Key": "Name",
              "Value": "VPC"
            }
          ]
        },
        "Type": "AWS::EC2::VPC"
      },
      "InternetGateway": {
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "InternetGateway"
            }
          ]
        },
        "Type": "AWS::EC2::InternetGateway"
      },
      "InternetGatewayAttachment": {
        "Properties": {
          "InternetGatewayId": {
            "Ref": "InternetGateway"
          },
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Type": "AWS::EC2::VPCGatewayAttachment"
      },
      "AWSNat": {
        "DependsOn": "InternetGatewayAttachment",     
        "Properties": {
          "AllocationId": {
            "Fn::GetAtt": [
              "NatEip",
              "AllocationId"
            ]
          },
          "SubnetId": {
            "Ref": "PublicSubnetAZ1"
          }
        },
        "Type": "AWS::EC2::NatGateway"
      },
      "NatEip": {
        "Properties": {
          "Domain": "vpc"
        },
        "Type": "AWS::EC2::EIP"
      }
    }
  
}